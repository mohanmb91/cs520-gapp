
    create table academics (
        id  serial not null,
        file_location_transcript varchar(255),
        gpa float4 not null,
        gre_score int8,
        tofel_score int8,
        primary key (id)
    );

    create table additional_department_feild_values (
        id  serial not null,
        feild_values varchar(255),
        application_id int4,
        feildDetails_id int4,
        primary key (id)
    );

    create table additional_department_feilds (
        id  serial not null,
        feild_type varchar(255),
        required boolean not null,
        required_feild varchar(255),
        department_id int4,
        primary key (id)
    );

    create table application_status (
        id  serial not null,
        status varchar(255),
        primary key (id)
    );

    create table applications (
        id  serial not null,
        term varchar(255),
        program_id int4,
        student_id int4,
        primary key (id)
    );

    create table applications_additional_department_feild_values (
        applications_id int4 not null,
        additionalDepartmentFeildValues_id int4 not null
    );

    create table applications_status_update (
        applications_id int4 not null,
        statusHistory_id int4 not null
    );

    create table departments (
        id  serial not null,
        dept_name varchar(255),
        primary key (id)
    );

    create table departments_additional_department_feilds (
        departments_id int4 not null,
        deptRequirements_id int4 not null
    );

    create table departments_programs (
        departments_id int4 not null,
        programs_id int4 not null
    );

    create table education_background (
        id  serial not null,
        college varchar(255),
        degree varchar(255),
        degree_earned varchar(255),
        from_date varchar(255),
        major varchar(255),
        to_date varchar(255),
        primary key (id)
    );

    create table programs (
        id  serial not null,
        name varchar(255),
        department_id int4,
        primary key (id)
    );

    create table status_update (
        id  serial not null,
        comment varchar(255),
        time_changed timestamp,
        application_id int4,
        currentStatus_id int4,
        primary key (id)
    );

    create table students (
        id  serial not null,
        cin varchar(255),
        citizenship varchar(255),
        date_of_birth varchar(255),
        email_id varchar(255),
        first_name varchar(255),
        gender varchar(255),
        last_name varchar(255),
        phone_number varchar(255),
        user_name varchar(255),
        academics_id int4,
        user_id int4,
        primary key (id)
    );

    create table students_applications (
        students_id int4 not null,
        applications_id int4 not null
    );

    create table students_education_background (
        students_id int4 not null,
        educationBackgrounds_id int4 not null
    );

    create table user_role (
        id  serial not null,
        role varchar(255),
        primary key (id)
    );

    create table users (
        id  serial not null,
        email_id varchar(255),
        enabled boolean not null,
        first_name varchar(255),
        last_name varchar(255),
        password varchar(255),
        user_name varchar(255),
        userRole_id int4,
        primary key (id)
    );

    alter table applications_additional_department_feild_values 
        add constraint UK_7uxk7oex60223u768x799m5lr unique (additionalDepartmentFeildValues_id);

    alter table applications_status_update 
        add constraint UK_p0n317mofj6sokqmy32i4ev35 unique (statusHistory_id);

    alter table departments_additional_department_feilds 
        add constraint UK_hpodnjet8tlefm7oyi83ljeuq unique (deptRequirements_id);

    alter table departments_programs 
        add constraint UK_tf3r4r1fm5vxyqqj0cte1b242 unique (programs_id);

    alter table students_applications 
        add constraint UK_fnvbk1rqb7edo4uhj35hwcoan unique (applications_id);

    alter table students_education_background 
        add constraint UK_bcl49u4fw3c2ttb8ue8q4169m unique (educationBackgrounds_id);

    alter table additional_department_feild_values 
        add constraint FK_6tsgqtebtwoecuo44qf8pqoq 
        foreign key (application_id) 
        references applications;

    alter table additional_department_feild_values 
        add constraint FK_6517dubvl5huus5exft0m5g3j 
        foreign key (feildDetails_id) 
        references additional_department_feilds;

    alter table additional_department_feilds 
        add constraint FK_fddxsgb5uogywgpesi9tki0mf 
        foreign key (department_id) 
        references departments;

    alter table applications 
        add constraint FK_fvv8mt4q3l0jlgem0374rwfb5 
        foreign key (program_id) 
        references programs;

    alter table applications 
        add constraint FK_bjc0uvubm2oywqk7gpgdqigt1 
        foreign key (student_id) 
        references students;

    alter table applications_additional_department_feild_values 
        add constraint FK_7uxk7oex60223u768x799m5lr 
        foreign key (additionalDepartmentFeildValues_id) 
        references additional_department_feild_values;

    alter table applications_additional_department_feild_values 
        add constraint FK_mic64iweq3j141c5sbkshb1e5 
        foreign key (applications_id) 
        references applications;

    alter table applications_status_update 
        add constraint FK_p0n317mofj6sokqmy32i4ev35 
        foreign key (statusHistory_id) 
        references status_update;

    alter table applications_status_update 
        add constraint FK_5pgqeyasb37pxfe1au9bqjfod 
        foreign key (applications_id) 
        references applications;

    alter table departments_additional_department_feilds 
        add constraint FK_hpodnjet8tlefm7oyi83ljeuq 
        foreign key (deptRequirements_id) 
        references additional_department_feilds;

    alter table departments_additional_department_feilds 
        add constraint FK_kl23bke6bqt8ujo53h219s470 
        foreign key (departments_id) 
        references departments;

    alter table departments_programs 
        add constraint FK_tf3r4r1fm5vxyqqj0cte1b242 
        foreign key (programs_id) 
        references programs;

    alter table departments_programs 
        add constraint FK_rriiddsas5pqioblauvbw5d60 
        foreign key (departments_id) 
        references departments;

    alter table programs 
        add constraint FK_t38cee5jtiwtw07papp2rjlca 
        foreign key (department_id) 
        references departments;

    alter table status_update 
        add constraint FK_qujt4uvkb6svrqpw9kgwx3i3u 
        foreign key (application_id) 
        references applications;

    alter table status_update 
        add constraint FK_7pfsrgtubeautp2itt7lax3sr 
        foreign key (currentStatus_id) 
        references application_status;

    alter table students 
        add constraint FK_jen118ecdmdaclrrwo6iyboiv 
        foreign key (academics_id) 
        references academics;

    alter table students 
        add constraint FK_g4fwvutq09fjdlb4bb0byp7t 
        foreign key (user_id) 
        references users;

    alter table students_applications 
        add constraint FK_fnvbk1rqb7edo4uhj35hwcoan 
        foreign key (applications_id) 
        references applications;

    alter table students_applications 
        add constraint FK_hecpbi1tgo32hmu1q5ih2te0 
        foreign key (students_id) 
        references students;

    alter table students_education_background 
        add constraint FK_bcl49u4fw3c2ttb8ue8q4169m 
        foreign key (educationBackgrounds_id) 
        references education_background;

    alter table students_education_background 
        add constraint FK_nkfx83tcvvqydw9cmodysoddm 
        foreign key (students_id) 
        references students;

    alter table users 
        add constraint FK_pxsi5ryp0d78pvm0yhq4x51mw 
        foreign key (userRole_id) 
        references user_role;

        
        --inserting user role

INSERT INTO user_role(
            role)
    VALUES ('student');

    INSERT INTO user_role(
             role)
    VALUES ('staff');

    INSERT INTO user_role(
             role)
    VALUES ('admin');

     --inserting users
    
  select * from users;  INSERT INTO public.users(
             email_id, enabled, first_name,last_name, password, user_name, userrole_id)
    VALUES ('mohan@localhost.localdomain',true , 'mohankumar','M balasubramani', 'password@01','mohan', 3);
INSERT INTO public.users(
             email_id, enabled, first_name,last_name, password, user_name, userrole_id)
    VALUES ('cysun@localhost.localdomain',true , 'cysun','LastName', 'cysun','cysun', 2);
    INSERT INTO public.users(
             email_id, enabled, first_name,last_name, password, user_name, userrole_id)
    VALUES ('misha@localhost.localdomain',true , 'misha','Chandhan', 'misha','misha', 2);
    INSERT INTO public.users(
             email_id, enabled, first_name,last_name, password, user_name, userrole_id)
    VALUES ('student1@localhost.localdomain',true , 'student1','LastName1', 'student1','student1', 1);
    INSERT INTO public.users(
             email_id, enabled, first_name,last_name, password, user_name, userrole_id)
    VALUES ('student2@localhost.localdomain',true , 'student2','LastName2', 'student2','student2', 1);

  
    
      -- inserting departmetns
    
    insert into public.departments( dept_name)
    values('Accounting');
    insert into public.departments( dept_name)
    values('Computer Science');
    
    -- inserting programs
    
    INSERT INTO public.programs(
             name, department_id)
    VALUES ( 'MS in Accounting', 1);
    INSERT INTO public.programs(
             name, department_id)
    VALUES ( 'MS in Computer Science', 2);
    
    -- inserting status 
    INSERT INTO public.application_status(status
            )
    VALUES ('New');
    INSERT INTO public.application_status(status
            )
    VALUES ('Pending Review');
	INSERT INTO public.application_status(status
            )
    VALUES ('Denied');
	INSERT INTO public.application_status(status
            )
    VALUES ('Recommend Admit');
	INSERT INTO public.application_status(status
            )
    VALUES ('Recommend Admit w/ Condition');
    
    -- inserting into acedemics
    INSERT INTO public.academics(file_location_transcript,gpa,gre_score,tofel_score
            )
    VALUES ('some_location',4.0,300,92);
    INSERT INTO public.academics(file_location_transcript,gpa,gre_score,tofel_score
            )
    VALUES ('some_location2',3.8,296,89);
    
    --inserting into educational background
    
    INSERT INTO public.education_background(major,college,degree,degree_earned,from_date,to_date
            )
    VALUES ('computer science','Anna University','under graduate','BE.Computer Science','2008-04-22','2012-03-24');
  
    INSERT INTO public.education_background(major,college,degree,degree_earned,from_date,to_date
            )
    VALUES ('Information Technology','Anna University','under graduate','B Tech IT','2008-04-22','2012-03-24');
    
    -- inserting into students
    
    INSERT INTO public.students(
             cin, citizenship, date_of_birth, email_id, first_name, gender, last_name,
            phone_number, user_name, academics_id, user_id)
    VALUES (305049490, 'Indian','1991-08-12', 'student1@localhost.localdomain', 'student1','male', 'lastname1',
            '6265543207', 'student1', 1, 4);
            
	INSERT INTO public.students(
             cin, citizenship, date_of_birth, email_id, first_name, gender, last_name,
            phone_number, user_name, academics_id, user_id)
    VALUES ('', 'American','1994-16-09', 'student2@localhost.localdomain', 'student2','male','lastname1', 
            '6265874412', 'student2', 2, 5);
    
	-- inserting into Student educational background
	
	INSERT INTO public.students_education_background(
            students_id, educationbackgrounds_id)
    VALUES (2,2);

	-- inserting into additional_department_feilds
	
	INSERT INTO public.additional_department_feilds(
             feild_type, required, required_feild, department_id)
    VALUES ('Number',  true, 'Gmat', 1);
    INSERT INTO public.additional_department_feilds(
             feild_type, required, required_feild, department_id)
    VALUES ('text',  true, 'SOP(statement of purpose)', 1);

	--insert into departments_additional_department_feilds
    INSERT INTO public.departments_additional_department_feilds(
            departments_id, deptrequirements_id)
    VALUES (1,1);

    INSERT INTO public.departments_additional_department_feilds(
            departments_id, deptrequirements_id)
    VALUES (1,2);
    
    -- insert into applications 
    
    INSERT INTO public.applications(
             term,program_id, student_id)
    VALUES ( 'Fall 2016',1, 1);

    
    -- insert into additional_department_feild_values
    INSERT INTO public.additional_department_feild_values(
             feild_values, application_id, feilddetails_id)
    VALUES ( '900', 1, 1);
INSERT INTO public.additional_department_feild_values(
             feild_values, application_id, feilddetails_id)
    VALUES ( 'here we can give the location of ', 1, 2);
    
    -- inserting into applications_additional_department_feild_values
    INSERT INTO public.applications_additional_department_feild_values(
            applications_id, additionaldepartmentfeildvalues_id)
    VALUES (1, 1);


INSERT INTO public.applications_additional_department_feild_values(
            applications_id, additionaldepartmentfeildvalues_id)
    VALUES (1, 2);
    
    -- inserting into departments_programs
    
    INSERT INTO public.departments_programs(
            departments_id, programs_id)
    VALUES (1, 1);

    INSERT INTO public.departments_programs(
            departments_id, programs_id)
    VALUES (2, 2);

    
    -- inserting into students_applications
    INSERT INTO public.students_applications(
            students_id, applications_id)
    VALUES (1, 1);

